import Head from "next/head";
import Image from "next/image";
import styles from "../styles/Home.module.css";
import Link from "next/link";
import connectMongo from "../utils/connectMongo";
import { LoginContext } from "../context/LoginContext";
import css from "../styles/Pages/Index.module.scss";

// import Test from '../models/testModel'
import Article_model from "../Models/articleModel";

import Article_mini from "../Components/Article_mini";

import { useEffect, useState, useContext } from "react";

export default function Home({ articles }) {
    const { user } =
    useContext(LoginContext);
    const [articleList, setArticleList] = useState([]);
    

    return (
        <div className={css.global_container}>
            <Head>
                <title>Create Next App</title>
                <meta
                    name="description"
                    content="Generated by create next app"
                />
                <link rel="icon" href="/favicon.ico" />
            </Head>

            {user ? (
                <div>
                    <Link href={"/NewArticle"} >
                        <button> New Article</button>
                    </Link>
                </div>
            ) : ''}

            <div className={css.card_container}>
                {articles.map((item, index) => (
                    <div key={index} className={css.card_container}>
                        <Article_mini
                            title={item.title}
                            description={item.description}
                            text={item.text}
                            id={item._id}
                            author={item.author}
                            date={item.date}
                            image={item.image}
                            key={index}
                        />
                       
                    </div>
                ))}
            </div>
        </div>
    );
}

export const getServerSideProps = async () => {
    try {
        await connectMongo();

        console.log("mongo connected");
        const articles = await Article_model.find();
       

        return {
            props: {
                articles: JSON.parse(JSON.stringify(articles)),
            },
        };
    } catch (error) {
        console.log(error);
    }
};
